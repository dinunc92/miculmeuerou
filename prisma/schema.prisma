generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  received
  emailed
  email_failed
  printed
  delivered
}

model Order {
  id              String      @id @default(cuid())
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  // Stripe
  paymentId       String      @unique
  email           String      // <-- email client (unic la nivel de comandă)

  // Nr. comandă incremental (000001 etc.)
  orderNumber     Int         @default(0)
  status          OrderStatus @default(received)

  // Total (RON, informativ)
  totalRON        Int         @default(0)

  // Adresă & telefon (dacă e tipărire)
  shippingAddress String?
  shippingPhone   String?

  hasPrinted      Boolean     @default(false)

  items           OrderItem[]
  emailLogs       EmailLog[]
}

model OrderItem {
  id           String   @id @default(cuid())
  createdAt    DateTime @default(now())

  order        Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId      String

  productId    String
  productType  String
  title        String
  priceRON     Int
  customization Json?
}

model EmailLog {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   String

  to        String
  subject   String
  success   Boolean
  error     String?
}

model CustomAsset {
  token      String   @id
  mime       String
  dataBase64 String
  createdAt  DateTime @default(now())
}
